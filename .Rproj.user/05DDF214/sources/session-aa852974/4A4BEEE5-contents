---
title: "Tester les légendes"
format: html
---


## Installer `maplegend`


Avec le package `remotes` on installe des packages qui ne sont pas (encore) sur le CRAN, directement depuis github
```{r}
#| eval: false
library(remotes)
install_github("riatelab/maplegend")
```


# Tests 

L'idée est de rajouter les légendes aux cartes suivantes. 




## Proportional Symbols


```{r mf_prop, message=FALSE, warning=FALSE}
library(mapsf)
# import the sample data set
mtq <- mf_get_mtq()
# Initiate a base map
mf_theme("darkula")
mf_init(x = mtq)
# Plot a shadow
mf_shadow(mtq, add = TRUE)
# plot municipalities
mf_map(mtq, add = TRUE)
# plot population
mf_map(
  x = mtq,
  var = "POP",
  type = "prop",
  inches = 0.25,
  col = "brown4",
  leg_pos = NA
)
library(maplegend)
leg(type = "prop", val = c(min(mtq$POP), max(mtq$POP)), inches = 0.25, mar = getOption("mapsf.mar"), 
    bg = "red", fg = "white", border = "white", self_adjust = TRUE, horiz = TRUE)

# layout
mf_layout(
  title = "Population Distribution in Martinique",
  credits = paste0(
    "Sources: Insee and IGN, 2018\n",
    "mapsf ",
    packageVersion("mapsf")
  )
)
```

## Choropleth Map

Utiliser `mf_get_breaks() `pour obtenir les bornes (méthode geom, 5 classes)
```{r mf_map_c}
library(mapsf)
# import the sample data set
mtq <- mf_get_mtq()
# population density (inhab./km2) using sf::st_area()
mtq$POPDENS <- 1e6 * mtq$POP / sf::st_area(mtq)
# set a theme
mf_theme("green")
# plot population density
mf_map(
  x = mtq,
  var = "POPDENS",
  type = "choro",
  breaks = "geom",
  nbreaks = 5,
  pal = "Greens",
  border = "white",
  lwd = 0.5,
  leg_pos = NA
  )
# layout
mf_layout(
  title = "Population Distribution in Martinique",
  credits = paste0(
    "Sources: Insee and IGN, 2018\n",
    "mapsf ",
    packageVersion("mapsf")
  )
)
```

## Typology Map


```{r mf_map_t}
library(mapsf)
# import the sample data set
mtq <- mf_get_mtq()
# set theme
mf_theme("dark")
# plot administrative status
mf_map(
  x = mtq,
  var = "STATUS",
  type = "typo",
  pal = c("aquamarine4", "yellow3", "wheat"),
  lwd = .5,
  val_order = c(
    "Prefecture",
    "Sub-prefecture",
    "Simple municipality"
  ),
  leg_pos = NA
)

# layout
mf_layout(
  title = "Administrative Status",
  credits = paste0(
    "Sources: Insee and IGN, 2018\n",
    "mapsf ",
    packageVersion("mapsf")
  )
)
```

## Proportional Symbols using Choropleth Coloration


L'idée ici est de composer une légende "stackée" avec les deux légendes. 
Utiliser `leg_comp()` et `leg_draw()`

```{r mf_map_pc, fig.width=5}
library(mapsf)
# import the sample data set
mtq <- mf_get_mtq()
# set theme
mf_theme("candy")
# expand the map space
mf_init(x = mtq, expandBB = c(0, 0, 0, .15))
# Plot a shadow
mf_shadow(mtq, add = TRUE)
# Plot the municipalities
mf_map(mtq, add = TRUE)
# Plot symbols with choropleth coloration
mf_map(
  x = mtq,
  var = c("POP", "MED"),
  type = "prop_choro",
  border = "grey50",
  lwd = 1,
  leg_pos = c(NA, NA),
  leg_title = c("Population", "Median\nIncome\n(in euros)"),
  breaks = "equal",
  nbreaks = 4,
  pal = "Greens",
  leg_val_rnd = c(0, -2)
)
# layout
mf_layout(
  title = "Population & Wealth in Martinique, 2015",
  credits = paste0(
    "Sources: Insee and IGN, 2018\n",
    "mapsf ",
    packageVersion("mapsf")
  ),
  frame = TRUE
)
```

## Proportional Symbols using Typology Coloration

L'idée ici est de composer une légende "stackée" avec les deux légendes. 
Utiliser `leg_comp()` et `leg_draw()`


```{r mf_map_pt, fig.width=5}
library(mapsf)
# import the sample data set
mtq <- mf_get_mtq()
# set theme
mf_theme("ink")
# expand the map space
mf_init(x = mtq, expandBB = c(0, 0, 0, .15))
# Plot a shadow
mf_shadow(mtq, add = TRUE)
# Plot the municipalities
mf_map(mtq, add = TRUE)
# Plot symbols with choropleth coloration
mf_map(
  x = mtq,
  var = c("POP", "STATUS"),
  type = "prop_typo",
  symbol = "square",
  border = "white",
  lwd = .5,
  leg_pos = c(NA, NA),
  leg_title = c("Population", "Administrative\nStatus"),
  val_order = c(
    "Prefecture", "Sub-prefecture",
    "Simple municipality"
  )
)
# layout
mf_layout(
  title = "Population Distribution in Martinique",
  credits = paste0(
    "Sources: Insee and IGN, 2018\n",
    "mapsf ",
    packageVersion("mapsf")
  )
)
```

## Links Map


```{r mf_grad}
library(mapsf)
# import the sample data set
mtq <- mf_get_mtq()
# import the csv file embedded in mapsf
mob <- read.csv(system.file("csv/mob.csv", package = "mapsf"))
# Select links from Fort-de-France (97209))
mob_97209 <- mob[mob$i == 97209, ]
# create an sf object of links
mob_links <- mf_get_links(x = mtq, df = mob_97209)
# set theme
mf_theme("dark")
# initiate map
mf_init(x = mtq)
# Plot a shadow
mf_shadow(mtq, add = TRUE)
# Plot the municipalities
mf_map(mtq, add = TRUE)
# plot graduated links
mf_map(
  x = mob_links,
  var = "fij",
  type = "grad",
  breaks = c(100, 500, 1000, 4679.0),
  lwd = c(1, 4, 8),
  leg_pos = NA,
  leg_title = "Nb. of\nCommuters",
  col = "red4",
  leg_frame = TRUE
)
# map layout
mf_layout(
  title = "Commuting to Fort-de-France",
  credits = paste0(
    "Sources: Insee and IGN, 2018\n",
    "mapsf ",
    packageVersion("mapsf")
  ),
  arrow = FALSE
)
```

```{r, echo = FALSE}
mf_theme("default")
```


